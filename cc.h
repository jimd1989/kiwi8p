# pragma once

#include <stdint.h>

#define CC_BASE_BYTE (uint8_t)176

typedef struct Entry {
  char          * key;
  uint8_t         val;
} Entry;


#define CC_DICT_SIZE 96

/* Must be alphabetized */
static const Entry CcDict[CC_DICT_SIZE] = {
  {"bankSelectMsb", 0},
  {"modWheelLvl", 1},
  {"portamento", 5},
  {"volume", 7},
  {"dco1Tune", 8},
  {"dco1LfoLvl", 9},
  {"dco1EnvLvl", 10},
  {"dco1Dyn", 11},
  {"dco2Tune", 12},
  {"dco2FineTune", 13},
  {"dco2LfoLvl", 14},
  {"dco2EnvLvl", 15},
  {"dco2Dyn", 16},
  {"detune", 17},
  {"dco1Mix", 18},
  {"dco2Mix", 19},
  {"dco2MixDyn",20},
  {"vcaLvl", 21},
  {"vcaDyn", 22},
  {"cutoff", 23},
  {"res", 24},
  {"vcfLfoLvl", 25},
  {"vcfEnvLvl", 26},
  {"vcfKey", 27},
  {"vcfDyn", 28},
  {"attack1", 29},
  {"decay1", 30},
  {"sustain1", 31},
  {"bankSelect", 32},
  {"release1", 33},
  {"attack2", 33},
  {"decay2", 35},
  {"sustain2", 36},
  {"release2", 37},
  {"lfo1Rate", 39},
  {"lfo1Delay", 40},
  {"lfo2Rate", 41},
  {"lfo2Delay", 42},
  {"lfo3Rate", 43},
  {"lfo3Delay", 44},
  {"clock", 45},
  {"patchClock", 46},
  {"matrixCc1", 47},
  {"matrixCc2", 48},
  {"matrixCc3", 49},
  {"matrixCc4", 50},
  {"matrixCc5", 51},
  {"matrixCc6", 52},
  {"matrixCc7", 53},
  {"matrixCc8", 54},
  {"modWheelToneLvl", 55},
  {"attack3", 56},
  {"decay3", 57},
  {"sustain3", 58},
  {"release3", 59},
  {"analogueFeel", 60},
  {"dco2MixEnv", 61},
  {"holdPedal", 64},
  {"dco1Range", 65},
  {"dco1Wave", 66},
  {"dco1LfoSource", 67},
  {"dco1EnvSource", 68},
  {"dco2Range", 69},
  {"dco2Wave", 70},
  {"dco2LfoSource", 71},
  {"dco2EnvSource", 72},
  {"hpf", 73},
  {"vcfLfoSource", 74},
  {"vcfEnvSource", 75},
  {"vcaEnvSource", 76},
  {"vcaLfoSource", 77},
  {"lfo1Wave", 78},
  {"lfo2Wave", 79},
  {"lfo3Wave", 80},
  {"chorus", 81},
  {"loadSeq", 82},
  {"midiControl", 83},
  {"xMod", 84},
  {"keyMode", 85},
  {"arpMode", 86},
  {"arpRange", 87},
  {"arpClockDiv", 88},
  {"seqClockDiv", 89},
  {"clockSource", 90},
  {"bendRange", 91},
  {"modWheelDestination", 92},
  {"atDestination", 93},
  {"voiceModeReassign", 102},
  {"voiceModeSteal", 103},
  {"voiceModeEnv", 104},
  {"toggleArp", 105},
  {"toggleSeq", 106},
  {"mixEnvSrc", 107},
  {"progChange", 118},
  {"allOff", 120},
  {"allNotesOff", 123}
};


